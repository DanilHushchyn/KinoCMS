version: '3.3'

services:
  web1:
    build :
      context: .
      dockerfile: Dockerfile
    command: bash -c "
      python manage.py migrate --no-input &&
      python manage.py init_script &&
      gunicorn config.kino_admin_wsgi:application --bind 0.0.0.0:8000 "
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - 8000
    depends_on:
      - db
    env_file:
      - ./.env.prod
  web2:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn config.kino_cms_wsgi:application --bind 0.0.0.0:8100
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - 8100
    depends_on:
      - db
    env_file:
      - ./.env.prod
  db:
    build:
      context: ./docker/postgres/
      dockerfile: Dockerfile
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
#      - local_postgres_data:/var/lib/postgresql/data:Z
    env_file:
      - ./.env.prod.db
    restart: always
  redis:
    image: redis:alpine
  celery:
    restart: always
    build:
      context: .
    volumes:
      - .:/usr/src/app/web
    command: celery -A config worker -l info
    depends_on:
      - db
      - redis
      - web1
      - web2
  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A config beat
    env_file:
      - ./.env.prod
    depends_on:
      - celery
  nginx:
    build: ./docker/nginx/
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    ports:
      - "127.0.0.1:3034:80"
      - "127.0.0.1:3035:81"
    depends_on:
      - web1
      - web2
volumes:
  postgres_data:
  static_volume:
  media_volume:
